using CounterAnimation.Models;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading;
using WordCounter.Models;

namespace WordCounterEntry
{
  class Program
  {
    public static void Main(string[] args)
    {
      Logic frontEnd = new Logic();
      bool run = true;

      while (run == true)
      {
        Console.WriteLine(@"
            Welcome to my
      ▄▄▌ ▐ ▄▌      ▄▄▄  ·▄▄▄▄        
      ██· █▌▐█▪    ▀▄  █·██▪ ██       
      ██▪▐█▐▐▌ ▄█▀▄ ▐▀▀▄ ▐█· ▐█▌      
      ▐█▌██▐█▌▐█▌.▐▌▐█ █▌██. ██       
       ▀▀▀▀ ▀▪ ▀█▄▀▪.▀  ▀▀▀▀▀▀•       
   ▄▄·       ▄• ▄▌  ▐ ▄▄▄▄▄▄▄▄▄  .▄▄▄  
  ▐█ ▌▪▪     █▪██▌ █▌▐█ ██  ▀▄▀▀▄▄  █·
  ██ ▄▄ ▄█▀▄ █▌▐█▌▐█▐▐▌ ▐█.▪▐▀▀▪▄▐▀▀▄ 
  ▐███▌▐█▌.▐▌▐█▄█▌██▐█▌ ▐█▌·▐█▄▄▌▐█ █▌
  ·▀▀▀  ▀█▄▀▪ ▀▀▀ ▀▀ █▪ ▀▀▀  ▀▀▀ .▀  ▀");
        Enter:
        Console.WriteLine("       Please enter a word:");
        string inputWord = Console.ReadLine();
        System.Threading.Thread.Sleep(3000);
        Console.WriteLine("Now enter a sentence or phrase to see if it contains the entered word:");
        string inputString = Console.ReadLine();
        
        frontEnd.GetInputWord(inputWord);
        frontEnd.GetInputString(inputString);
        frontEnd.RepeatCounter();

        System.Threading.Thread.Sleep(3000);
        Console.WriteLine("\n\n\n\tYour word: '" + inputWord + "'");
        System.Threading.Thread.Sleep(3000);
        Console.WriteLine("\n\nYour sentence: '" + inputString + "'");
        System.Threading.Thread.Sleep(3000);
        Console.WriteLine("\n\nThe number of occurances in the input sentence: " + frontEnd.WordCount + "!" + "\n\n\tWould you like to try again?\n\t\t[Y/N]");
        string addNew = (Console.ReadLine().ToLower());

        if (addNew == "y")
        {
          goto Enter;
        }
        else
        {
          Animation animation = new Animation();
          Console.CursorVisible = false;

          var arr = new[]
          {   
@"████████████████████████████████████████████████████████████████████████████████",
@"██████████████████████████████▀▀▀               ▀▀▀█████████████████████████████",
@"█████████████████████████▀   ▄▄▄▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▄▄▄   ▀████████████████████████",
@"█████████████████████▀   ▄▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▄   ▀████████████████████",
@"███████████████████▀  ▄▓▓▓███████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓███████▄▓▓▄  ▀█████████████████",
@"████████████████▀  ▄▓███████████████████████████████████████▓▄  ▀███████████████",
@"██████████████▀  ▓▓███████████████████████████████████████████▓▌  ▀█████████████",
@"█████████████  ▄███████████████████████████████████████████████▓▓▄  ████████████",
@"████████████  ██▓██████████████████████████████████████████████████  ███████████",
@"███████████  ████████████████████████████████████████████████████▓██  ██████████",
@"██████████  ████████████████████████████████████████████████████████▌ ▐█████████",
@"█████████▌ ▐█████████████████████████████████████████████████████████  █████████",
@"█████████  ██████████████████████████████████████████████████████████▌ ▐████████",
@"█████████  ███████████████████████████████████████████████████████████ ▐████████",
@"█████████  ███████████████████████████████████████████████████████████  ████████",
@"█████████  ███████████████████████████████████████████████████████████  ████████",
@"█████████  ███████████▀▀▀▀▀▀▀▀████████████████████▀▀▀▀▀▀▀▀▀███████████ ▐████████",
@"█████████  ████████▀  ▄▄▄▄▄▄     ▀█████████████▀     ▄▄▄▄▄▄  ▀████████ ▐████████",
@"█████████▌ ▐██████▄▄█████████████████████████████████████████▄▐██████▌ █████████",
@"██████████ ▐█████████████████████████████████████████████████████████  █████████",
@"████▀       █████████████████████████████████████████████████████████       ▀███",
@"███▌ ██▀█▄  ███████▀ ▄▄▄ ▄▄   ▄  ███████████████  ▄ ▄▄   ▄▄▄ ▀██████▌  ██▀█▌ ▐██",
@"███ ▐█▓█░▀▌ ██████▌ ███▌▒   ▒▒███ █████████████ ███▒    ▒████ ██████▌ ▐▀▐███  ██",
@"███ ▐██▌▓█  ████████▄▀▀▀▀▒▒▒▒▀███ ████████████▌▐███▀▒▒▒▒▀▀▀▀▄███████▌  ▓▌▓██  ██",
@"███  █▓▓██▌ ████████████████████████████████████████████████████████▌ ▐██▓▓█  ██",
@"████ ▐█▓▓█▌ ▐██████████████████████████████▌████████████████████████▌ ▐██▓█▀ ███",
@"████▌ ▀█▓█▌ ▐██████████████████████████████▌▐███████████████████████  ▓█▓█▀ ████",
@"██████  ███  ███████████████████████████████▐███████████████████████  ███  █████",
@"███████▄  ▀  ██████████████████████████████████████████████████████▌  ▀  ▄██████",
@"██████████▄▄  █████████████████████████████████████████████████████  ▄▄█████████",
@"████████████  ▐███████████████████▀█▀▓▀███▀▓▀█▌███████████████████▌  ███████████",
@"████████████▌  ▀███████████████████████▄▓▄███████████████████████▀  ▐███████████",
@"█████████████    ██████▀                                 ▀█████▀    ████████████",
@"█████████████      ▀█▀    ▄▀▐▄▄▄▄▄              ▄▄▄▄▒ ▒    ▀██▀     ████████████",
@"█████████████▌           ▐█▄ ▐▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ ▄██             █████████████",
@"██████████████           ▐███▄ ███████████████████▀ ████           █████████████",
@"███████████████           █████▄▄ ▀▀████████▀▀▀▄▄██████▌          ██████████████",
@"████████████████           ███████████▄▄▄▄▄▄██████████▀          ███████████████",
@"█████████████████▄          ▀█████████▀▀▀▀▀▀████████▀          ▄████████████████",
@"██████████████████▄            ▀████▀       ▀▀████▀           ██████████████████",
@"████████████████████▄                                      ▄▄███████████████████",
@"███████████████████████▄                                  ██████████████████████",
@"█████████████████████████                               ▄███████████████████████",
@"██████████████████████████▄▄                          ▄█████████████████████████",
@"█████████████████████████████▄                     ▄████████████████████████████",
@"████████████████████████████████▄▄             ▄▄███████████████████████████████",
@"███████████████████████████████████▄▄▄▄▄▄▄▄▄████████████████████████████████████",
@"███████████████████████████This App Brought To You By:██████████████████████████",
@"████████████████████████████████████████████████████████████████████████████████",
@"██████████████████                                             █████████████████",
@"██████████████████ ████████ ██    ██ ██      ███████ ██████    █████████████████",
@"██████████████████    ██     ██  ██  ██      ██      ██   ██   █████████████████",
@"██████████████████    ██      ████   ██      █████   ██████    █████████████████", 
@"██████████████████    ██       ██    ██      ██      ██   ██   █████████████████", 
@"██████████████████    ██       ██    ███████ ███████ ██   ██   █████████████████", 
@"██████████████████                                             █████████████████",
@"██████████████████    ██████   █████  ████████ ███████ ███████ █████████████████",
@"██████████████████    ██   ██ ██   ██    ██    ██      ██      █████████████████",
@"██████████████████    ██████  ███████    ██    █████   ███████ █████████████████",
@"██████████████████    ██   ██ ██   ██    ██    ██           ██ █████████████████",
@"██████████████████    ██████  ██   ██    ██    ███████ ███████ █████████████████",
@"████████████████████████████████████████████████████████████████████████████████",
@"████████████████████████████████████████████████████████████████████████████████",
@"                                                                                ",
@"                              Thanks for Playing!                               ",
          };

          var maxLength = arr.Aggregate(0, (max, line) => Math.Max(max, line.Length));
          var x = Console.BufferWidth/2 - maxLength/2;
          for (int y = -arr.Length; y < Console.WindowHeight + arr.Length; y++)
          {
            Animation.ConsoleDraw(arr, x, y);
            Thread.Sleep(100);
            run = false;
          }
        }
      }
    }
  }
}
